image: node:8-alpine

variables:
  CURRENT_BRANCH: ${CI_COMMIT_REF_NAME}

cache:
  paths:
    - node_modules/
    - dist/

before_script:
  - npm install -g @angular/cli@7.3.8 --no-optional

stages:
  - install
  - lint
  - build
  - test
  - deploy
  - performance
  - post_deploy

install:
  stage: install
  before_script: []
  script:
    - npm install --no-optional
  except:
    - schedules

lint:
  stage: lint
  script:
    - ng lint
    - npm audit
  allow_failure: true
  except:
    - schedules

build:
  stage: build
  script:
    - rm -rf dist/
    - ng build --prod --build-optimizer
    - mv dist/dist dist/dist-root
    - mkdir public
    - cp -r dist/dist-root/* public
  artifacts:
    name: "$CI_PROJECT_NAME-${CI_COMMIT_REF_NAME}"
    paths:
      - dist
  except:
    - schedules

test:
  before_script:
    - apk --no-cache add chromium xvfb
    - export CHROME_BIN=/usr/bin/chromium-browser
    - export CHROME_PATH=/usr/lib/chromium/
    # Launch Xvfb
    - Xvfb :0 -ac -screen 0 1024x768x24 &
    # Export display for Chrome
    - export DISPLAY=:99
    - npm install -g @angular/cli --no-optional
  stage: test
  script:
    - echo test
    # - ng test
    # - ng e2e
  except:
    - schedules

amazon_s3:
  image: python:3.7.3-alpine3.10
  stage: deploy
  variables:
    AWS_DEFAULT_REGION: eu-west-3 # The region of S3 bucket
    AWS_ACCESS_KEY_ID: ${AMAZON_S3_RESUME_WR_ACCESS_KEY_ID}
    AWS_SECRET_ACCESS_KEY: ${AMAZON_S3_RESUME_WR_SECRET_ACCESS_KEY}
  before_script:
    - apk add --no-cache bash
    - pip install awscli # Install the SDK
  script:
    - ./scripts/uploader_amazon_s3.sh
  cache:
    paths:
      - dist/
  except:
    - schedules
  only:
    variables:
      - $CI_PROJECT_PATH == "patricioperpetua/web"

deploy-image-branches:
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_REGISTRY: 'registry.gitlab.com/patricioperpetua/web'
  stage: deploy
  before_script:
    - docker login registry.gitlab.com -u ${REGISTRY_GITLAB_USER} -p ${REGISTRY_GITLAB_PASS}
    - apk add --no-cache bash curl gawk git sed util-linux pciutils usbutils coreutils binutils findutils grep
  script:
    - if [ "${CI_COMMIT_REF_NAME}" == "master" ]; then
        export DOCKER_IMAGE_TAG=latest;
      else
        export DOCKER_IMAGE_TAG=${CI_COMMIT_REF_NAME};
      fi
    - ./scripts/generate_docker_image.sh ${DOCKER_REGISTRY} ${DOCKER_IMAGE_TAG} ${CI_COMMIT_SHA} 1
  when: on_success
  cache:
    paths:
      - dist/
  except:
    - schedules
  only:
    variables:
      - $CI_PROJECT_PATH == "patricioperpetua/web"

performance:
  stage: performance
  image: docker:git
  variables:
    URL: https://patricioperpetua.com
  services:
    - docker:stable-dind
  before_script: []
  script:
    - mkdir gitlab-exporter
    - wget -O ./gitlab-exporter/index.js https://gitlab.com/gitlab-org/gl-performance/raw/master/index.js
    - mkdir sitespeed-results
    - docker run --shm-size=1g --rm -v "$(pwd)":/sitespeed.io sitespeedio/sitespeed.io:6.3.1 --plugins.add ./gitlab-exporter --outputFolder sitespeed-results $URL
    - mv sitespeed-results/data/performance.json performance.json
  artifacts:
    paths:
      - sitespeed-results/
    reports:
      performance: performance.json
  cache:
    paths:
      - sitespeed-results/
      - dist/
  only:
    variables:
      - $CI_PROJECT_PATH == "patricioperpetua/resume"

pages:
  stage: post_deploy
  script:
    - mkdir -p public/reports/sitespeed || true
    - cp -r dist/dist-root/* public || true
    - cp -r sitespeed-results/**/* public/reports/sitespeed || true
    - ls -R public
  artifacts:
    name: "$CI_PROJECT_NAME-${CI_COMMIT_REF_NAME}"
    paths:
      - public
  only:
  - master
